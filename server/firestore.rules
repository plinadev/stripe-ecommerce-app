rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function userOwnsCourse(userId, courseId) {
      return get(/databases/$(database)/documents/users/$(userId)/coursesOwned/$(courseId)).exists();
    }

    function isUserWithId(userId) {
      return request.auth.uid == userId;
    }

    function isSubscriber(userId) {
      let userDoc = get(/databases/$(database)/documents/users/$(userId));
      return userDoc.exists() && userDoc.data.keys().hasAny(['subscriptionId']);
    }

    match /courses/{courseId} {
      allow read: if true;

      match /lessons/{lessonId} {
        allow read: if userOwnsCourse(request.auth.uid, courseId) || isSubscriber(request.auth.uid);
      }
    }

    match /purchaseSessions/{purchaseId} {
      allow read: if request.auth.uid == resource.data.userId;
    }

    match /users/{userId} {
      allow read: if isUserWithId(userId);

      match /coursesOwned/{courseId} {
        allow read: if isUserWithId(userId);
      }
    }
  }
}
